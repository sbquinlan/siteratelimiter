var n, t, r, o1 = require("preact"), u = 0, i = [], c = o1.options.__b, e = o1.options.__r, f = o1.options.diffed, a = o1.options.__c, v = o1.options.unmount;
function p(n1, r1) {
    o1.options.__h && o1.options.__h(t, n1, u || r1), u = 0;
    var i1 = t.__H || (t.__H = {
        __: [],
        __h: []
    });
    return n1 >= i1.__.length && i1.__.push({
    }), i1.__[n1];
}
function s(n1) {
    return u = 1, x(A, n1);
}
function x(r1, o1, u1) {
    var i1 = p(n++, 2);
    return i1.t = r1, i1.__c || (i1.__ = [
        u1 ? u1(o1) : A(void 0, o1),
        function(n1) {
            var t1 = i1.t(i1.__[0], n1);
            i1.__[0] !== t1 && (i1.__ = [
                t1,
                i1.__[1]
            ], i1.__c.setState({
            }));
        }
    ], i1.__c = t), i1.__;
}
function m(r1, u1) {
    var i1 = p(n++, 4);
    !o1.options.__s && q(i1.__H, u1) && (i1.__ = r1, i1.__H = u1, t.__h.push(i1));
}
function l(t1, r1) {
    var o1 = p(n++, 7);
    return q(o1.__H, r1) && (o1.__ = t1(), o1.__H = r1, o1.__h = t1), o1.__;
}
function y() {
    i.forEach(function(n1) {
        if (n1.__P) try {
            n1.__H.__h.forEach(_), n1.__H.__h.forEach(d), n1.__H.__h = [];
        } catch (t1) {
            n1.__H.__h = [], o1.options.__e(t1, n1.__v);
        }
    }), i = [];
}
o1.options.__b = function(n1) {
    t = null, c && c(n1);
}, o1.options.__r = function(r1) {
    e && e(r1), n = 0;
    var o1 = (t = r1.__c).__H;
    o1 && (o1.__h.forEach(_), o1.__h.forEach(d), o1.__h = []);
}, o1.options.diffed = function(n1) {
    f && f(n1);
    var u1 = n1.__c;
    u1 && u1.__H && u1.__H.__h.length && (1 !== i.push(u1) && r === o1.options.requestAnimationFrame || ((r = o1.options.requestAnimationFrame) || function(n2) {
        var t1, r1 = function() {
            clearTimeout(o2), h && cancelAnimationFrame(t1), setTimeout(n2);
        }, o2 = setTimeout(r1, 100);
        h && (t1 = requestAnimationFrame(r1));
    })(y)), t = void 0;
}, o1.options.__c = function(n1, t1) {
    t1.some(function(n2) {
        try {
            n2.__h.forEach(_), n2.__h = n2.__h.filter(function(n3) {
                return !n3.__ || d(n3);
            });
        } catch (r1) {
            t1.some(function(n3) {
                n3.__h && (n3.__h = []);
            }), t1 = [], o1.options.__e(r1, n2.__v);
        }
    }), a && a(n1, t1);
}, o1.options.unmount = function(n1) {
    v && v(n1);
    var t1 = n1.__c;
    if (t1 && t1.__H) try {
        t1.__H.__.forEach(_);
    } catch (n2) {
        o1.options.__e(n2, t1.__v);
    }
};
var h = "function" == typeof requestAnimationFrame;
function _(n1) {
    var r1 = t;
    "function" == typeof n1.__c && n1.__c(), t = r1;
}
function d(n1) {
    var r1 = t;
    n1.__c = n1.__(), t = r1;
}
function q(n1, t1) {
    return !n1 || n1.length !== t1.length || t1.some(function(t2, r1) {
        return t2 !== n1[r1];
    });
}
function A(n1, t1) {
    return "function" == typeof t1 ? t1(n1) : t1;
}
exports.useState = s, exports.useReducer = x, exports.useEffect = function(r1, u1) {
    var i1 = p(n++, 3);
    !o1.options.__s && q(i1.__H, u1) && (i1.__ = r1, i1.__H = u1, t.__H.__h.push(i1));
}, exports.useLayoutEffect = m, exports.useRef = function(n1) {
    return u = 5, l(function() {
        return {
            current: n1
        };
    }, []);
}, exports.useImperativeHandle = function(n1, t1, r1) {
    u = 6, m(function() {
        "function" == typeof n1 ? n1(t1()) : n1 && (n1.current = t1());
    }, null == r1 ? r1 : r1.concat(n1));
}, exports.useMemo = l, exports.useCallback = function(n1, t1) {
    return u = 8, l(function() {
        return n1;
    }, t1);
}, exports.useContext = function(r1) {
    var o2 = t.context[r1.__c], u1 = p(n++, 9);
    return u1.__c = r1, o2 ? (null == u1.__ && (u1.__ = true, o2.sub(t)), o2.props.value) : r1.__;
}, exports.useDebugValue = function(n1, t1) {
    o1.options.useDebugValue && o1.options.useDebugValue(t1 ? t1(n1) : n1);
}, exports.useErrorBoundary = function(r1) {
    var o2 = p(n++, 10), u1 = s();
    return o2.__ = r1, t.componentDidCatch || (t.componentDidCatch = function(n1) {
        o2.__ && o2.__(n1), u1[1](n1);
    }), [
        u1[0],
        function() {
            u1[1](void 0);
        }
    ];
};
